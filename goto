#!/bin/bash

# Name:        goto
# Author:      Petar KatiÄ‡ (bratpeki)
# Type:        terminal out, dmenu
# Description: Quickly open direcoties
#              You first select the directory and then the programToRun
#              If you don't select a directory, goto exits
#              If you don't select a program, goto opens the direcory
#              with the first program in the config
#              Here, I'm taking "st" into account and running "st -e ...", since
#              that is how a new "st" instance starts with a given command
# Arguments:
#              -l ( Local execution - Execute command from current shell )
# Example:     None provided, script uses graphical tool(s)

locationOfCfg="$HOME/.config/bash-scripts/goto"

if test -f "$locationOfCfg"; then

	# "-type d" is not necessary if the explorer of choice doubles as an editor
	# excluding paths can preferrably be done by using "!/-not -path "*word-in-your-path*""
	findCommand="find $HOME -maxdepth 5 -type d"

	echo "Getting directories..."
	directory="$($findCommand | dmenu -i -l 25)"

	if [ -z "$directory" ]; then
		echo "No selection, exiting..."
	else
		programToRun="$(dmenu -i -l 25 < "$locationOfCfg")"

		if [ -z "$programToRun" ]; then
			programToRun="$(cat "$locationOfCfg" | head -n 1)"
		fi

		if [ "$1" == "-l" ] || [ "$1" == "-L" ]; then
			"$programToRun" "$directory"
		else
			# Replace this with your browser of choice
			# In Konsole: konsole -e bash -c "$programToRun" "$directory"
			# In GNOME Terminal: gnome-terminal -- bash -c ""$programToRun" "$directory"; exec bash"
			st -e "$programToRun" "$directory"
		fi

	fi

else
	printf "vifm\nfeh\nmpv" > "$locationOfCfg"
	goto
fi

